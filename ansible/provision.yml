- hosts: servers
  sudo: true
  vars_files:
    - vars.yml 
    - vars_pkgs.yml 

  tasks:
  # packages
  - name: Install python-apt (manually) as the "apt" ansible module needs it
    shell: apt-get install -y python-apt python-software-properties
  # node (for bower)
  - name: add nodejs PPA
    apt_repository: repo=ppa:chris-lea/node.js
  - name: apt update
    apt: update_cache=yes
  - name: Install apt packages
    apt: pkg=${item} state=installed update-cache=yes
    with_items: ${apt_packages}

  # app setup
  - name: create app user
    user: name=${project_user} home=${project_root}
  - name: create application dir
    file: group=${project_user} owner=${project_user} mode=755 state=directory
          path=${item}
    with_items:
      - ${project_root}
      - ${project_root}/application
      - ${project_root}/public_html

  # copy ssl keys
  - name: copy ssl chain
    copy: src="non-git-files/${inventory_hostname}.uni-trier.de/unitrier-ca-chain.pem"
          dest="/etc/ssl/"
    tags: ssl
  - name: copy public key
    copy: src="non-git-files/${inventory_hostname}.uni-trier.de/server.crt"
          dest="/etc/ssl/${inventory_hostname}.pem"
    tags: ssl
  - name: copy private key
    copy: src="non-git-files/${inventory_hostname}.uni-trier.de/server.key"
          dest="/etc/ssl/private/${inventory_hostname}.key"
    tags: ssl

  # apache setup
  - name: add apache vhost
    template: owner=root mode=0644 src=templates/apache2-site 
              dest=/etc/apache2/sites-enabled/${project_name}
    notify: reload apache2
  - name: enable apache ssl
    shell: a2enmod ssl
    notify: reload apache2

  # create DB
  - name: create database "${project_db_name}" db
    mysql_db: db=${project_db_name}
  - name: create db user "${project_db_user}"
    mysql_user: name=${project_db_user} 
                password=${item}
                priv=${project_db_name}.*:ALL
    with_file:
      - "non-git-files/db-password"

  handlers:
    - include: handlers.yml

# do the deploy
- include: deploy.yml

